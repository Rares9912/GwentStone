Starting audit...
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:16:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:21:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:21:25: Parameter mana should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:26:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:31:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:31:32: Parameter description should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:36:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:41:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:41:27: Parameter colors should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:46:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:51:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:51:25: Parameter name should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Hero.java:56:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/CommandsImplementation.java:3:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/CommandsImplementation.java:4:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:18:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:22:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:26:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:30:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:34:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:38:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:42:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:46:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:50:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:54:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:58:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Card.java:62:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:15:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'writeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'writeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:15:27: Parameter card should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:15:43: Parameter output should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:15:61: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:15:87: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:16: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:17: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:35:36: '30' is a magic number. [MagicNumber]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:40:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'writeHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'writeHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:40:27: Parameter card should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:40:43: Parameter output should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:40:62: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:50:30: '30' is a magic number. [MagicNumber]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:53:17: Parameter input should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:53:30: Parameter output should be final. [FinalParameters]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:55:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:76:82: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:77:20: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:77:85: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:78:46: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:80: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:81: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:85: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:86: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:87: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:89: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:89:27: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:90: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:95:47: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:97: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:98: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:101:28: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:102: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:105: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:111:46: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:113: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:114: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:118:46: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:119:28: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:119:95: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/rares/Desktop/tema/./src/implementation/Game.java:127:42: Avoid nested blocks. [AvoidNestedBlocks]
Audit done.
Checkstyle ends with 70 errors.
